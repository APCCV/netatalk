dnl configure.in for netatalk

AC_INIT(bin/adv1tov2/adv1tov2.c)

NETATALK_VERSION=`cat VERSION`
AC_SUBST(NETATALK_VERSION)

AC_CANONICAL_SYSTEM
AM_INIT_AUTOMAKE(netatalk, ${NETATALK_VERSION})
AM_CONFIG_HEADER(config.h)

dnl Reset locations to proper places
AC_PREFIX_DEFAULT(/usr)

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_CC
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_LIBTOOL

dnl *********************************************************************
dnl FIXME! FIXME! These should be selectable properly, and should produce
dnl the proper flags and defines...
dnl *********************************************************************

dnl Checks for libraries.
dnl Replace `main' with a function in -labs:
AC_CHECK_LIB(abs, main)
dnl Replace `main' with a function in -laudit:
AC_CHECK_LIB(audit, main)
dnl Replace `main' with a function in -lauth:
AC_CHECK_LIB(auth, main)
dnl Replace `main' with a function in -lcmd:
AC_CHECK_LIB(cmd, main)
dnl Replace `main' with a function in -lcom_err:
AC_CHECK_LIB(com_err, main)
dnl Replace `main' with a function in -lcrypt:
AC_CHECK_LIB(crypt, main)
dnl Replace `main' with a function in -lcrypto:
AC_CHECK_LIB(crypto, main)
dnl Replace `main' with a function in -ld:
AC_CHECK_LIB(d, main)
dnl Replace `main' with a function in -ldb:
AC_CHECK_LIB(db, main)
dnl Replace `main' with a function in -ldes:
AC_CHECK_LIB(des, main)
dnl Replace `main' with a function in -ldl:
AC_CHECK_LIB(dl, main)
dnl Replace `main' with a function in -lkauth:
AC_CHECK_LIB(kauth, main)
dnl Replace `main' with a function in -lkrb:
AC_CHECK_LIB(krb, main)
dnl Replace `main' with a function in -llwp:
AC_CHECK_LIB(lwp, main)
dnl Replace `main' with a function in -ln:
AC_CHECK_LIB(n, main)
dnl Replace `main' with a function in -lnsl:
AC_CHECK_LIB(nsl, main)
dnl Replace `main' with a function in -lprot:
AC_CHECK_LIB(prot, main)
dnl Replace `main' with a function in -lresolv:
AC_CHECK_LIB(resolv, main)
dnl Replace `main' with a function in -lrpcsvc:
AC_CHECK_LIB(rpcsvc, main)
dnl Replace `main' with a function in -lrx:
AC_CHECK_LIB(rx, main)
dnl Replace `main' with a function in -lrxkad:
AC_CHECK_LIB(rxkad, main)
dnl Replace `main' with a function in -lsocket:
AC_CHECK_LIB(socket, main)
dnl Replace `main' with a function in -lsys:
AC_CHECK_LIB(sys, main)
dnl Replace `main' with a function in -lubik:
AC_CHECK_LIB(ubik, main)

dnl Checks for header files.
AC_HEADER_DIRENT
AC_HEADER_STDC
AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(fcntl.h limits.h strings.h sys/file.h sys/ioctl.h sys/time.h syslog.h unistd.h)

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_UID_T
AC_C_INLINE
AC_TYPE_MODE_T
AC_TYPE_OFF_T
AC_TYPE_PID_T
AC_TYPE_SIZE_T
AC_STRUCT_ST_RDEV
AC_HEADER_TIME
AC_STRUCT_TM

dnl Checks for library functions.
AC_TYPE_GETGROUPS
AC_PROG_GCC_TRADITIONAL
AC_FUNC_MEMCMP
AC_HEADER_MAJOR
AC_FUNC_MMAP
AC_TYPE_SIGNAL
AC_FUNC_UTIME_NULL
AC_FUNC_WAIT3
AC_CHECK_FUNCS(getcwd gethostname gettimeofday getusershell mkdir rmdir select socket strdup strstr strtoul)

dnl --------------------------------------------------------------------------
dnl specific configuration comes in here:
dnl --------------------------------------------------------------------------

AC_ARG_WITH(admin-group,
	[  --with-admin-group=grp  enable and set administrative group],
	admin_grp="$withval"
	AC_DEFINE_UNQUOTED(ADMIN_GRP, "$admin_grp")
	AC_MSG_RESULT([enabling administrative group "$admin_grp"]),
)

AC_ARG_WITH(auth-printing-dir,
	[  --with-auth-printing-dir=path
              path to authenticated printing directory],
		cap_dir="$withval"
		AC_DEFINE_UNQUOTED(CAPDIR, "$cap_dir")
		AC_DEFINE(USE_CAP)
		AC_MSG_RESULT([enabling authenticated printing support]),
)

AC_ARG_WITH(config-dir,
	[  --with-config-dir=path  path to config files [default=/etc/atalk]],
		config_dir="$withval",
		config_dir="/etc/atalk"
)
AC_DEFINE_UNQUOTED(CONFIG_DIR, "$config_dir",
	[path to config dir [default=/etc/atalk]])
CONFIG_DIR="$config_dir"
AC_SUBST(CONFIG_DIR)
AC_MSG_RESULT([setting configuration files location to $CONFIG_DIR]),

AC_ARG_WITH(cracklib,
	[  --with-cracklib=dict    enable/set location of cracklib dictionary],
	cracklib="$withval"
	AC_CHECK_LIB(crack, main,
		AC_DEFINE(USE_CRACKLIB) 
		LIBS="$LIBS -lcrack"
		AC_MSG_RESULT([enabling cracklib support])
		if test "$cracklib" = "yes"; then
			cracklib="/usr/lib/cracklib_dict"
		fi
		AC_DEFINE_UNQUOTED(_PATH_CRACKLIB, "$cracklib",
			[path to cracklib dictionary])
		AC_MSG_RESULT([setting cracklib dictionary to $cracklib]),
		AC_MSG_ERROR([cracklib not found!])
	)
)

AC_ARG_ENABLE(ddp,
	[  --disable-ddp           disable DDP],
	AC_DEFINE(NO_DDP, 1)
	AC_MSG_RESULT([disabling DDP])
)

AC_ARG_ENABLE(debug,
	[  --enable-debug          enable debug code],
	AC_DEFINE(DEBUG, 1)
	AC_MSG_RESULT([enabling debugging code]),
	AC_DEFINE(DEBUG, 0)
)

msg_dir=""
AC_ARG_WITH(message-dir,
	[  --with-msg-dir=path     path to message files [default=/etc/atalk/msg]],
		msg_dir="$withval"
		if test x"$msg_dir" = "x"; then
			msg_dir="$CONFIG_DIR/msg"
		fi
		AC_DEFINE_UNQUOTED(SERVERTEXT, "$msg_dir",
			[path to message dir [default=$CONFIG_DIR/msg]])
		SERVERTEXT="$msg_dir"
		AC_SUBST(SERVERTEXT)
)

AC_ARG_WITH(pam,
	[  --with-pam              enable password authentication modules support],
	AC_CHECK_LIB(pam, main,
		AC_DEFINE(USE_PAM)
		LIBS="$LIBS -lpam"
		AC_MSG_RESULT([enabling pam modules support])
	)
)

AC_ARG_WITH(shadow,
	[  --with-shadow           enable shadow password support],
	AC_MSG_RESULT([enabling shadow password support])
	AC_DEFINE(SHADOWPW)
)

AC_ARG_WITH(flock-locks,
	[  --with-flock-locks      enable flock locks support],
	AC_MSG_RESULT([enabling flock locks])
	AC_DEFINE(USE_FLOCK_LOCKS)
)

AC_ARG_WITH(tcp-wrappers,
	[  --with-tcp-wrappers     enable TCP wrappers support],
	AC_CHECK_LIB(wrap, main,
		AC_DEFINE(TCPWRAP)
		LIBS="$LIBS -lwrap"
		AC_MSG_RESULT([enabling TCP wrappers support])
	)
)

AC_ARG_WITH(uams-path,
	[  --with-uams-path=path   path to UAMs [default=/etc/atalk/uams]],
	uams_path="$withval",
	uams_path="/etc/atalk/uams"
)
AC_DEFINE_UNQUOTED(UAMS_PATH, "$uams_path",
	[path to UAMs [default=/etc/atalk/uams]])
UAMS_PATH="$uams_path"
AC_SUBST(UAMS_PATH)

dnl --------------------------------------------------------------------------
dnl drop in includes for top level directory structures here...
dnl --------------------------------------------------------------------------
LIBS="$LIBS -L\$(top_srcdir)/libatalk/"
CFLAGS="$CFLAGS -I\$(top_srcdir)/include -I\$(top_srcdir)/sys"
AC_SUBST(LIBS)
AC_SUBST(CFLAGS)

dnl --------------------------------------------------------------------------
dnl specific configuration comes in here:
dnl --------------------------------------------------------------------------

dnl --------------------- determine operating system from "target"
case "$target" in
*linux*)   this_os=linux ;;
*solaris*) this_os=solaris ;;
esac

dnl --------------------- conditional libraries, etc from "target"

dnl List of Makefiles to generate

AC_OUTPUT([Makefile
	bin/Makefile
	bin/adv1tov2/Makefile
	bin/aecho/Makefile
	bin/afile/Makefile
	bin/afppasswd/Makefile
	bin/getzones/Makefile
	bin/megatron/Makefile
	bin/nbp/Makefile
	bin/pap/Makefile
	bin/psorder/Makefile
	config/Makefile
	contrib/Makefile
	contrib/nu/Makefile
	contrib/printing/Makefile
	contrib/shell_utils/Makefile
	contrib/timelord/Makefile
	distrib/Makefile
	distrib/config/Makefile
	distrib/config/netatalk-config
	distrib/initscripts/Makefile
	distrib/initscripts/rc.atalk.redhat
	distrib/m4/Makefile
	etc/Makefile
	etc/afpd/Makefile
	etc/afpd/nls/Makefile
	etc/atalkd/Makefile
	etc/uams/Makefile
	etc/papd/Makefile
	etc/psf/Makefile
	include/Makefile
	include/atalk/Makefile
	libatalk/Makefile
	libatalk/adouble/Makefile
	libatalk/asp/Makefile
	libatalk/atp/Makefile
	libatalk/compat/Makefile
	libatalk/dsi/Makefile
	libatalk/nbp/Makefile
	libatalk/netddp/Makefile
	libatalk/util/Makefile
	man/Makefile
	man/man1/Makefile
	man/man3/Makefile
	man/man4/Makefile
	man/man8/Makefile
	sys/Makefile
	sys/netatalk/Makefile
	],
	[chmod a+x distrib/config/netatalk-config contrib/shell_utils/apple_*]
)

